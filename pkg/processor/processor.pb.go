// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: processor.proto

package processor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pdf_Method int32

const (
	Pdf_AUTO      Pdf_Method = 0
	Pdf_EXTRACT   Pdf_Method = 1
	Pdf_RASTERIZE Pdf_Method = 2
	Pdf_EXPLICIT  Pdf_Method = 4
)

// Enum value maps for Pdf_Method.
var (
	Pdf_Method_name = map[int32]string{
		0: "AUTO",
		1: "EXTRACT",
		2: "RASTERIZE",
		4: "EXPLICIT",
	}
	Pdf_Method_value = map[string]int32{
		"AUTO":      0,
		"EXTRACT":   1,
		"RASTERIZE": 2,
		"EXPLICIT":  4,
	}
)

func (x Pdf_Method) Enum() *Pdf_Method {
	p := new(Pdf_Method)
	*p = x
	return p
}

func (x Pdf_Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pdf_Method) Descriptor() protoreflect.EnumDescriptor {
	return file_processor_proto_enumTypes[0].Descriptor()
}

func (Pdf_Method) Type() protoreflect.EnumType {
	return &file_processor_proto_enumTypes[0]
}

func (x Pdf_Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pdf_Method.Descriptor instead.
func (Pdf_Method) EnumDescriptor() ([]byte, []int) {
	return file_processor_proto_rawDescGZIP(), []int{1, 0}
}

type Rotate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte  `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Degree  float64 `protobuf:"fixed64,2,opt,name=degree,proto3" json:"degree,omitempty"`
}

func (x *Rotate) Reset() {
	*x = Rotate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rotate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rotate) ProtoMessage() {}

func (x *Rotate) ProtoReflect() protoreflect.Message {
	mi := &file_processor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rotate.ProtoReflect.Descriptor instead.
func (*Rotate) Descriptor() ([]byte, []int) {
	return file_processor_proto_rawDescGZIP(), []int{0}
}

func (x *Rotate) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Rotate) GetDegree() float64 {
	if x != nil {
		return x.Degree
	}
	return 0
}

type Pdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content     []byte     `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Method      Pdf_Method `protobuf:"varint,2,opt,name=method,proto3,enum=processor.Pdf_Method" json:"method,omitempty"`
	MethodName  string     `protobuf:"bytes,3,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`            // Method name when EXPLICIT is selected.
	PageNumbers []uint32   `protobuf:"varint,4,rep,packed,name=page_numbers,json=pageNumbers,proto3" json:"page_numbers,omitempty"` // Page numbers which should be processed
}

func (x *Pdf) Reset() {
	*x = Pdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pdf) ProtoMessage() {}

func (x *Pdf) ProtoReflect() protoreflect.Message {
	mi := &file_processor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pdf.ProtoReflect.Descriptor instead.
func (*Pdf) Descriptor() ([]byte, []int) {
	return file_processor_proto_rawDescGZIP(), []int{1}
}

func (x *Pdf) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Pdf) GetMethod() Pdf_Method {
	if x != nil {
		return x.Method
	}
	return Pdf_AUTO
}

func (x *Pdf) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *Pdf) GetPageNumbers() []uint32 {
	if x != nil {
		return x.PageNumbers
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format  string `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_processor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_processor_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Image) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string      `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Documents []*Document `protobuf:"bytes,2,rep,name=documents,proto3" json:"documents,omitempty"`
	Pages     []*Image    `protobuf:"bytes,3,rep,name=pages,proto3" json:"pages,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_processor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_processor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_processor_proto_rawDescGZIP(), []int{3}
}

func (x *Document) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Document) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *Document) GetPages() []*Image {
	if x != nil {
		return x.Pages
	}
	return nil
}

var File_processor_proto protoreflect.FileDescriptor

var file_processor_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x06,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x03, 0x50, 0x64, 0x66,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x50, 0x64, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3c, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x52, 0x41, 0x53, 0x54, 0x45, 0x52, 0x49, 0x5a, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x45, 0x58, 0x50, 0x4c, 0x49, 0x43, 0x49, 0x54, 0x10, 0x04, 0x22, 0x39, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x32, 0xb3, 0x01, 0x0a, 0x0c, 0x50, 0x64, 0x66, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x50,
	0x64, 0x66, 0x54, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x50, 0x64, 0x66, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x34, 0x0a, 0x0b, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x64, 0x66, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x2e, 0x50, 0x64, 0x66, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x67, 0x6d, 0x61, 0x6e, 0x6e, 0x2f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_processor_proto_rawDescOnce sync.Once
	file_processor_proto_rawDescData = file_processor_proto_rawDesc
)

func file_processor_proto_rawDescGZIP() []byte {
	file_processor_proto_rawDescOnce.Do(func() {
		file_processor_proto_rawDescData = protoimpl.X.CompressGZIP(file_processor_proto_rawDescData)
	})
	return file_processor_proto_rawDescData
}

var file_processor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_processor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_processor_proto_goTypes = []any{
	(Pdf_Method)(0),  // 0: processor.Pdf.Method
	(*Rotate)(nil),   // 1: processor.Rotate
	(*Pdf)(nil),      // 2: processor.Pdf
	(*Image)(nil),    // 3: processor.Image
	(*Document)(nil), // 4: processor.Document
}
var file_processor_proto_depIdxs = []int32{
	0, // 0: processor.Pdf.method:type_name -> processor.Pdf.Method
	4, // 1: processor.Document.documents:type_name -> processor.Document
	3, // 2: processor.Document.pages:type_name -> processor.Image
	2, // 3: processor.PdfProcessor.ConvertPdfToImage:input_type -> processor.Pdf
	1, // 4: processor.PdfProcessor.RotateImage:input_type -> processor.Rotate
	4, // 5: processor.PdfProcessor.CreatePdf:input_type -> processor.Document
	3, // 6: processor.PdfProcessor.ConvertPdfToImage:output_type -> processor.Image
	3, // 7: processor.PdfProcessor.RotateImage:output_type -> processor.Image
	2, // 8: processor.PdfProcessor.CreatePdf:output_type -> processor.Pdf
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_processor_proto_init() }
func file_processor_proto_init() {
	if File_processor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_processor_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Rotate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processor_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Pdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processor_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_processor_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_processor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_processor_proto_goTypes,
		DependencyIndexes: file_processor_proto_depIdxs,
		EnumInfos:         file_processor_proto_enumTypes,
		MessageInfos:      file_processor_proto_msgTypes,
	}.Build()
	File_processor_proto = out.File
	file_processor_proto_rawDesc = nil
	file_processor_proto_goTypes = nil
	file_processor_proto_depIdxs = nil
}
