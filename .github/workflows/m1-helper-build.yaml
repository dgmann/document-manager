name: Build M1 Helper
on:
  push:
    paths:
      - 'm1-helper/**'
      - '.github/workflows/m1-helper-build.yaml'

jobs:
  push:
    runs-on: ubuntu-latest
    env:
      working-directory: ./m1-helper

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.14.0' # The Go version to download (if necessary) and use.
      - name: "Compile"
        working-directory: ${{env.working-directory}}
        run: | 
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o m1-helper.exe . && zip --junk-paths m1-helper-64.zip m1-helper.exe
          GOOS=windows GOARCH=386 go build -ldflags="-s -w" -o m1-helper.exe . && zip --junk-paths m1-helper-32.zip m1-helper.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload 64bit Release Asset
        id: upload-release-asset-64 
        working-directory: ${{env.working-directory}}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./m1-helper-64.zip
          asset_name: m1-helper-64.zip
          asset_content_type: application/zip
      - name: Upload 32bit Release Asset
        id: upload-release-asset-32 
        working-directory: ${{env.working-directory}}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./m1-helper-32.zip
          asset_name: m1-helper-32.zip
          asset_content_type: application/zip